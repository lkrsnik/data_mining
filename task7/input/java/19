import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
public class FileEditor extends JFrame implements ActionListener
{
    JScrollPane scrollpane;
    JTextArea txtarea;
    JMenuBar MenuBar;
    JMenu FILE,EDIT;
    JMenuItem FILENEW,FILEOPEN,FILESAVE,FILEEXIT,FILESAVE_AS;
    JMenuItem EDITCOPY,EDITCUT,EDITPASTE;
    JFileChooser filechooser;
    boolean fileopened=false;
    String filename;
 
    public FileEditor()
    {
    this.setTitle("MYNOTEPAD");
    txtarea=new JTextArea(0,0);
    txtarea.setBackground(Color.black);
    txtarea.setForeground(Color.white);
    scrollpane=new JScrollPane(txtarea);
    MenuBar=new JMenuBar();
    FILE=new JMenu("FILE");
    EDIT=new JMenu("EDIT");
    FILENEW=new JMenuItem("New");
    FILEOPEN=new JMenuItem("Open");
    FILESAVE=new JMenuItem("Save");
    FILEEXIT=new JMenuItem("Exit");
    FILESAVE_AS=new JMenuItem("Save As");
    EDITCOPY=new JMenuItem("Copy");
    EDITCUT=new JMenuItem("Cut");
    EDITPASTE=new JMenuItem("Paste");
    FILE.add(FILENEW);
    FILE.add(FILEOPEN);
    FILE.add(FILESAVE);
 
    FILE.add(FILESAVE_AS);
    FILE.add(FILEEXIT);
    EDIT.add(EDITCOPY);
    EDIT.add(EDITCUT);
    EDIT.add(EDITPASTE);
    MenuBar.add(FILE);
    MenuBar.add(EDIT);
    EDITCOPY.addActionListener(this);
    EDITCUT.addActionListener(this);
    EDITPASTE.addActionListener(this);
    FILENEW.addActionListener(this);
    FILEOPEN.addActionListener(this);
    FILESAVE.addActionListener(this);
    FILESAVE_AS.addActionListener(this);
    FILEEXIT.addActionListener(this);
    this.setJMenuBar(MenuBar);
    this.setSize(500,500);
    this.add(scrollpane,BorderLayout.CENTER);
    this.setVisible(true);
    }
    public void actionPerformed(ActionEvent e)
    {
        if(e.getSource()==FILENEW)
        {
            txtarea.setText("");
            fileopened=false;
        }
        if(e.getSource()==FILEOPEN)
        {
            txtarea.setText(null);
            filechooser=new JFileChooser();
            filechooser.showOpenDialog(new JPanel());
            filename=String.valueOf(filechooser.getSelectedFile());         
            fileopened=true;
            String s;
            FileReader r;
            BufferedReader b;
            try
            {
                r=new FileReader(filename);
                b=new BufferedReader(r);
                while((s=b.readLine())!=null)
                {
                    txtarea.append(s);
                    txtarea.append("\n");
                }
                b.close();
                r.close();
            }
            catch(Exception e1)
            {
                System.out.println(e1);
            }
        }
        else if(e.getSource()==FILESAVE)
        {
            if(fileopened==true)
            {
                try
                {
                    FileWriter fw=new FileWriter(filename);
                    fw.write(txtarea.getText());
                    fw.close();
                }
                catch(Exception e1)
                {
                    System.out.println(e1);
                }
            }
            else
            {
                JFileChooser jfc=new JFileChooser();
                jfc.showSaveDialog(new JPanel());
                filename=String.valueOf(jfc.getSelectedFile());
                try
                {
                    FileWriter fr=new FileWriter(filename);
                    fr.write(txtarea.getText());
                    fr.close();
 
                }
                catch(Exception e1)
                {
                    System.out.println(e1);
                }
            }
        }
        else if(e.getSource()==FILESAVE_AS)
        {
            JFileChooser fc=new JFileChooser();
            fc.showSaveDialog(new JPanel());
            filename=String.valueOf(fc.getSelectedFile());
            try{
            FileWriter fwrtr=new FileWriter(filename);
            fwrtr.write(txtarea.getText());
            fwrtr.close();
            }
            catch(Exception e1)
            {
            System.out.println(e1);
            }
        }
        else if(e.getSource()==EDITCOPY)
        {
            txtarea.copy();
        }
        else if(e.getSource()==EDITCUT)
        {
            txtarea.cut();
        }
        else if(e.getSource()==EDITPASTE)
        {
            txtarea.paste();
        }
        else if(e.getSource()==FILEEXIT)
        {
            System.exit(0);
        }
    }//end Action Performed
 
    public static void main(String []arg)
    {
        FileEditor file=new FileEditor();
 
        file.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
}